use crate::Hash;

#[derive(Default, Copy, Clone)]
pub struct Pearson;


impl Hash<[u8], u8> for Pearson {
    fn hash(&self, data: &[u8]) -> u8 {
        data.iter().fold(0, |h, b| PERMUTATION_TABLE[(b ^ h) as usize])
    }
}


const PERMUTATION_TABLE: [u8; 256] = [
    141, 230, 017, 046, 099, 116, 156, 149, 052, 193, 043, 189, 148, 203, 224, 184,
    066, 216, 197, 068, 198, 053, 048, 242, 195, 239, 144, 241, 073, 000, 212, 069,
    139, 032, 092, 056, 157, 247, 243, 143, 168, 131, 215, 228, 067, 084, 096, 071,
    196, 208, 050, 238, 209, 142, 044, 126, 237, 030, 249, 248, 179, 158, 060, 246,
    226, 201, 049, 040, 213, 108, 231, 183, 171, 217, 165, 121, 152, 162, 123, 016,
    134, 167, 010, 174, 098, 252, 018, 199, 187, 104, 022, 059, 027, 222, 154, 191,
    100, 232, 210, 220, 204, 122, 160, 102, 240, 150, 182, 186, 115, 211, 194, 045,
    138, 061, 007, 140, 074, 225, 105, 055, 117, 041, 233, 145, 008, 245, 013, 205,
    234, 133, 218, 023, 015, 155, 086, 037, 026, 173, 164, 235, 036, 006, 227, 190,
    207, 254, 014, 002, 169, 047, 236, 221, 137, 081, 001, 127, 223, 033, 080, 177,
    094, 110, 136, 058, 192, 021, 163, 088, 181, 031, 202, 025, 005, 106, 109, 124,
    035, 113, 083, 090, 079, 039, 075, 082, 178, 038, 062, 101, 097, 128, 166, 076,
    132, 019, 024, 175, 089, 153, 188, 147, 063, 250, 085, 253, 091, 111, 095, 042,
    028, 087, 114, 011, 130, 176, 161, 029, 112, 120, 214, 093, 009, 151, 135, 078,
    125, 255, 146, 070, 172, 206, 159, 244, 185, 003, 077, 180, 064, 072, 012, 057,
    219, 229, 107, 004, 020, 034, 200, 051, 119, 129, 251, 054, 118, 103, 170, 065
];
